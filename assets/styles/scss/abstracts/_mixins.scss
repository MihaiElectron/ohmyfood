// abstracts/_mixins.scss
// Mixins génériques et techniques réutilisables
// Outils bas niveau (typography, flexbox, transitions, breakpoints...)
// Ne contient PAS de styles spécifiques au projet
// Utilisé par : _typography.scss, components/, layout/

@use 'variables' as v;

// ==========================================
// LAYOUT & POSITIONING
// ==========================================

@mixin flex(
    $direction: row,
    $justify: center,
    $align: center,
    $wrap: nowrap,
    $align-content: center
) {
    display: flex;              // Valeur CSS fixe (toujours "flex")
    flex-direction: $direction; // Valeur variable $ (row, column, etc.)
    justify-content: $justify;
    align-items: $align;
    flex-wrap: $wrap;
    align-content: $align-content;
}

// ==========================================
// TYPOGRAPHY UTILITIES
// ==========================================

@mixin typography($size, $weight: 400, $line-height: 1.2) {
    font-size: $size;
    font-weight: $weight;
    line-height: $line-height;
}

// ==========================================
// RESPONSIVE & BREAKPOINTS
// ==========================================

@mixin button-default($width: v.$btn-width, $height: v.$btn-height) {
  width: $width;
  height: $height;
  position: relative;
  @include flex();
  border: none;
  border-radius: v.$btn-border-radius;
  background: v.$btn-bg-default;
  color: v.$btn-color;
  cursor: pointer;
  box-shadow: v.$btn-shadow-default;
  overflow: hidden;
  
  &::before {
    content: "";
    position: absolute;
    inset: 0;
    background: v.$btn-bg-hover;
    opacity: 0;
    transition: opacity 0.3s ease;
    border-radius: inherit;
    z-index: -1;
    will-change: opacity; // Indique au navigateur d'optimiser cette propriété
  }
  
  &:hover {
    box-shadow: v.$btn-shadow-hover;
    transform: translateZ(0); // Force l'accélération GPU
    
    &::before {
      opacity: 1;
    }
  }
}

  